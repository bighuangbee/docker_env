version: '3.1'
services:
  mysql-db:
    image: mysql:5.7.9 # GeneratedColumn
    restart: always
    container_name: mysql-db
    #command: mysqld set global explicit_defaults_for_timestamp = ON;
    volumes:
      - /hidrone/data/mysql:/var/lib/mysql
      - ./mysql/my.cnf:/etc/my.cnf
    ports:
      - 23306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456 #root初始密码
    networks:
      - hidrone_env

  # 定时执行数据库备份
  mysql_backup:
    build: mysql_backup
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - /hidrone/data/mysql_backup/:/data/mysql_backup/
      - ./mysql_backup/cmd:/root/mysql/cmd
    networks:
      - hidrone_env

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 26379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /hidrone/data/redis:/data
    command:
      redis-server /usr/local/etc/redis/redis.conf --requirepass 123456
    networks:
      - hidrone_env

  postgis-db:
    image: kartoza/postgis:11.0-2.5
    privileged: true
    volumes:
      - /hidrone/data/postgresql:/var/lib/postgresql
      - ./postgresql/pg_hba.conf:/etc/postgresql/11/main/pg_hba.conf
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=123456
      - ALLOW_IP_RANGE=0.0.0.0/0
      - PGDATA:/var/lib/postgresql/data/pgdata
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    ports:
      - 25432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"
    networks:
      - hidrone_env

  postgis-dbbackups:
    image: kartoza/pg-backup:12.0
    volumes:
      - /hidrone/data/dbbackups:/backups
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=123456
      - POSTGRES_PORT=5432
    restart: on-failure
    #    depends_on:
    #      postgis-db:
    #        condition: service_healthy
    networks:
      - hidrone_env

networks:
  hidrone_env:
    external:
      name: hidrone_net